# Maintainer: Bruno Pagani <archange at archlinux dot org>
# Maintainer: Caleb Maclennan <caleb@alerque.com>
# Contributor: Evgeniy Alekseev <arcanis at archlinux dot org>
# Contributor: Michael Migliore <mcmigliore+aur@gmail.com>
# Contributor: Ray Rashif <schiv at archlinux dot org>
# Contributor: Andrzej Giniewicz <gginiu at gmail dot com>
# Contributor: Thomas Dziedzic <gostrc at gmail>

pkgname=vtk
# May need bootstrapping on upgrades due to circular vtk <-> opencascade dependency
pkgver=9.4.0
pkgrel=1
pkgdesc="Software system for 3D computer graphics, image processing, and visualization"
arch=(x86_64)
url="https://www.vtk.org"
license=(BSD-3-Clause)
depends=(
  double-conversion
  gcc-libs
  glibc
  libtiff
  onetbb
  pugixml
)
makedepends=(
  adios2
  alembic
  anari-sdk
  boost
  cgns
  cli11
  cmake
  doxygen
  eigen
  expat
  fast_float
  ffmpeg
  fmt
  freetype2
  gdal
  git
  gl2ps
  glew
  gnuplot
  hdf5
  java-environment=11
  jsoncpp
  libharu
  libjpeg-turbo
  liblas
  libogg
  libpng
  libtheora
  libxml2
  libxt
  lz4
  mariadb-libs
  netcdf
  nlohmann-json
  opencascade
  openimagedenoise
  openmp
  openmpi
  openvdb
  openvr
  openxr
  ospray
  pdal
  postgresql-libs
  proj
  python-matplotlib
  python-mpi4py
  qt5-base
  qt5-tools
  qt5-declarative
  rapidjson
  sqlite
  tk
  unixodbc
  utf8cpp
  verdict
  wget
  xz
  zfp
  zlib
)
# pegtl: https://gitlab.kitware.com/vtk/vtk/-/issues/18151
# exprtk, ioss: not packaged
optdepends=(
  adios2
  alembic
  anari-sdk
  cgns
  ffmpeg
  fmt
  gdal
  gl2ps
  glew
  'gnuplot: plotting tools'
  'graphviz: drawing tools'
  hdf5
  'java-runtime=11: java bindings'
  jsoncpp
  libarchive
  libharu
  liblas
  lz4
  mariadb-libs
  netcdf
  opencascade
  openimagedenoise
  'openmpi: OpenMPI support'
  openvdb
  openvr
  openxr
  ospray
  pdal
  postgresql-libs
  proj
  'python: python bindings'
  'python-matplotlib: for Matplotlib rendering'
  'python-mpi4py: OpenMPI python support'
  'qt5-declarative: QML plugin'
  sqlite
  'tk: tcl bindings'
  unixodbc
  verdict
)
options=(staticlibs)
source=(${url}/files/release/${pkgver%.*}/VTK-${pkgver}.tar.gz
        vtk-occt.patch
        fmt-11.patch)
sha256sums=('16f3ffd65fafd68fab469bcb091395bf5432617c7db27cbce86a737bf09ec5b0'
            'df958eabc7dc4f5b33383ce0fb0f90a3ba202c1c2a24d3b5b9e7cfb1fb38b011'
            'c6345d09c219b5ca2efa6e7419f404a22715adb4d2ca1fd6ba34affd77cea23e')

prepare() {
  cd ${pkgname^^}-${pkgver}
  _fast_float_version=$(pacman -Q fast_float | sed -e 's/.* //; s/-.*//g')
  sed -i "s|3.9.0|${_fast_float_version}|" ThirdParty/fast_float/CMakeLists.txt

  patch -Np1 -i "$srcdir"/vtk-occt.patch
  patch -Np1 -i "$srcdir"/fmt-11.patch
}

build() {
  # To help cmake find java
  export JAVA_HOME=/usr/lib/jvm/default
  # To set tcl lib path
  local _tkver=$(echo 'puts $tcl_version' | tclsh)
  cmake -B build -S ${pkgname^^}-${pkgver} \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_CXX_FLAGS="$CXXFLAGS -ffat-lto-objects" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_INSTALL_LICENSEDIR=share/licenses/vtk \
    -DCMAKE_SKIP_RPATH=OFF \
    -DCMAKE_SKIP_INSTALL_RPATH=ON \
    -DCMAKE_JAVA_COMPILE_FLAGS="-Xlint:-options" \
    -DBUILD_SHARED_LIBS=ON \
    -DVTK_BUILD_ALL_MODULES=ON \
    -DVTK_INSTALL_TCL_DIR=/usr/lib/tcl${_tkver}/vtk/ \
    -DVTK_LEGACY_REMOVE=ON \
    -DVTK_SMP_ENABLE_OPENMP=ON \
    -DVTK_SMP_IMPLEMENTATION_TYPE=TBB \
    -DVTK_PYTHON_VERSION=3 \
    -DVTK_QT_VERSION=5 \
    -DVTK_USE_MPI=ON \
    -DVTK_USE_TK=ON \
    -DVTK_VERSIONED_INSTALL=OFF \
    -DVTK_WRAP_JAVA=ON \
    -DVTK_WRAP_PYTHON=ON \
    -DVTKOSPRAY_ENABLE_DENOISER=ON \
    -DVTKm_ENABLE_HDF5_IO=ON \
    -DVTKm_ENABLE_MPI=ON \
    -DVTKm_ENABLE_OPENMP=ON \
    -DVTK_USE_EXTERNAL=ON \
    -DVTK_MODULE_USE_EXTERNAL_VTK_exprtk=OFF \
    -DVTK_MODULE_USE_EXTERNAL_VTK_ioss=OFF \
    -DVTK_MODULE_USE_EXTERNAL_VTK_pegtl=OFF \
    -DVTK_MODULE_USE_EXTERNAL_VTK_token=OFF \
    -DVTK_MODULE_ENABLE_VTK_DomainsMicroscopy=NO \
    -DVTK_MODULE_ENABLE_VTK_FiltersOpenTURNS=NO \
    -DVTK_MODULE_ENABLE_VTK_RenderingZSpace=NO \
    -DOpenGL_GL_PREFERENCE=LEGACY \
    -DVTK_IGNORE_CMAKE_CXX11_CHECKS=ON \
    -Wno-dev
#    -DFIDES_USE_EXTERNAL_RAPIDJSON=ON \
  cmake --build build
}

package() {
  DESTDIR="${pkgdir}" cmake --install build

  # Move the vtk.jar to the arch-specific location…
  install -dv "${pkgdir}"/usr/share/java/vtk
  mv -v "${pkgdir}"/usr/lib/java/vtk.jar "${pkgdir}"/usr/share/java/vtk
  # …and the libs to the proper place
  mv "${pkgdir}"/usr/lib/java/vtk-Linux-${CARCH}/*.so "${pkgdir}"/usr/lib/
  rmdir "${pkgdir}"/usr/lib/java/{vtk-Linux-${CARCH}/,}

  # byte-compile python modules since the CMake build does not do it
  local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
  python -m compileall -o 0 -o 1 -o 2 --hardlink-dupes -s "${pkgdir}" "${pkgdir}"${site_packages}

  # Remove third party CMake patching for older versions than ours
  rm -rv "${pkgdir}"/usr/lib/cmake/vtk/patches/3.{1{3,6,9},20}
  # … as well as duplicate copies
  rm -rv "${pkgdir}"/usr/lib/cmake/vtk/vtkm/{Find*.cmake,cmake/{Find*.cmake,3.15}}
}
