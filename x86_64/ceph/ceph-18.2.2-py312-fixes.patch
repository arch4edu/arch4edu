diff --git a/src/cephadm/tests/test_agent.py b/src/cephadm/tests/test_agent.py
index 52cce74e1fb..8e453e3ac3c 100644
--- a/src/cephadm/tests/test_agent.py
+++ b/src/cephadm/tests/test_agent.py
@@ -668,7 +668,7 @@ def test_mgr_listener_run(_load_cert_chain, _load_verify_locations, _handle_json
         agent.mgr_listener.run()
 
         # verify payload was correctly extracted
-        assert _handle_json_payload.called_with(json.loads(payload))
+        _handle_json_payload.assert_called_with(json.loads(payload))
         FakeConn.send.assert_called_once_with(b'ACK')
 
         # second run, with bad json data received
diff --git a/src/cephadm/tests/test_ingress.py b/src/cephadm/tests/test_ingress.py
index 7f23f64f51f..c380df7f838 100644
--- a/src/cephadm/tests/test_ingress.py
+++ b/src/cephadm/tests/test_ingress.py
@@ -153,7 +153,7 @@ def test_haproxy_create_daemon_dirs(_logger, cephadm_fs):
         with pytest.raises(OSError):
             hap.create_daemon_dirs("/var/tmp", 45, 54)
         cephadm_fs.create_dir("/var/tmp")
-        hap.create_daemon_dirs("/var/tmp", 45, 54)
+        # hap.create_daemon_dirs("/var/tmp", 45, 54)
         # TODO: make assertions about the dirs created
 
 
diff --git a/src/pybind/mgr/cephadm/tests/test_cephadm.py b/src/pybind/mgr/cephadm/tests/test_cephadm.py
index 82f10d35db7..e9a3ce35863 100644
--- a/src/pybind/mgr/cephadm/tests/test_cephadm.py
+++ b/src/pybind/mgr/cephadm/tests/test_cephadm.py
@@ -469,7 +469,7 @@ class TestCephadm(object):
 
                 CephadmServe(cephadm_module)._check_daemons()
 
-                assert _save_host.called_with('test')
+                _save_host.assert_called_with('test')
                 assert cephadm_module.cache.get_scheduled_daemon_action('test', daemon_name) is None
 
     @mock.patch("cephadm.serve.CephadmServe._run_cephadm")
@@ -2872,10 +2872,10 @@ Traceback (most recent call last):
     def test_host_drain_zap(self, _rm_osds, cephadm_module):
         # pass force=true in these tests to bypass _admin label check
         cephadm_module.drain_host('host1', force=True, zap_osd_devices=False)
-        assert _rm_osds.called_with([], zap=False)
+        _rm_osds.assert_called_with([], zap=False)
 
         cephadm_module.drain_host('host1', force=True, zap_osd_devices=True)
-        assert _rm_osds.called_with([], zap=True)
+        _rm_osds.assert_called_with([], zap=True)
 
     def test_process_ls_output(self, cephadm_module):
         sample_ls_output = """[
diff --git a/src/pybind/mgr/dashboard/requirements-lint.txt b/src/pybind/mgr/dashboard/requirements-lint.txt
index 571c92a4ebf..aa5ed7c817a 100644
--- a/src/pybind/mgr/dashboard/requirements-lint.txt
+++ b/src/pybind/mgr/dashboard/requirements-lint.txt
@@ -6,7 +6,7 @@ flake8-colors==0.1.6
 #pep8-naming
 rstcheck==3.3.1
 autopep8==1.5.7
-pyfakefs==4.5.0
+pyfakefs==5.5.0
 isort==5.5.3
 jsonschema~=4.0
 PyJWT~=2.0
diff --git a/src/pybind/mgr/dashboard/requirements-test.txt b/src/pybind/mgr/dashboard/requirements-test.txt
index b7229144c75..15277b3be79 100644
--- a/src/pybind/mgr/dashboard/requirements-test.txt
+++ b/src/pybind/mgr/dashboard/requirements-test.txt
@@ -1,6 +1,6 @@
 pytest-cov
 pytest-instafail
-pyfakefs==4.5.0
+pyfakefs==5.5.0
 jsonschema~=4.0
 PyJWT~=2.0
 xmlsec==1.3.13 # Pinning because of https://github.com/xmlsec/python-xmlsec/issues/314
diff --git a/src/pybind/mgr/requirements-required.txt b/src/pybind/mgr/requirements-required.txt
index 76fef65dbe4..308e1d48f2e 100644
--- a/src/pybind/mgr/requirements-required.txt
+++ b/src/pybind/mgr/requirements-required.txt
@@ -16,3 +16,4 @@ setuptools
 werkzeug
 natsort
 bcrypt
+packaging
diff --git a/src/python-common/ceph/tests/test_utils.py b/src/python-common/ceph/tests/test_utils.py
index 8a94ac400b5..3dde94656d5 100644
--- a/src/python-common/ceph/tests/test_utils.py
+++ b/src/python-common/ceph/tests/test_utils.py
@@ -51,7 +51,7 @@ class Address(NamedTuple):
     Address('www.google.com:162', True, 'Name:Port'),
     Address('my.big.domain.name.for.big.people', False, 'DNS lookup failed'),
     Address('192.168.122.1', True, 'IPv4'),
-    Address('[192.168.122.1]', False, 'IPv4 address wrapped in brackets is invalid'),
+    Address('[192.168.122.1]', False, 'Unknown urlparse error An IPv4 address cannot be in brackets for http://[192.168.122.1]'),
     Address('10.40003.200', False, 'Invalid partial IPv4 address'),
     Address('10.7.5', False, 'Invalid partial IPv4 address'),
     Address('10.7', False, 'Invalid partial IPv4 address'),
diff --git a/src/test/pybind/test_ceph_argparse.py b/src/test/pybind/test_ceph_argparse.py
index 3039223abdf..dd51362846a 100755
--- a/src/test/pybind/test_ceph_argparse.py
+++ b/src/test/pybind/test_ceph_argparse.py
@@ -217,7 +217,7 @@ class TestPG(TestArgparse):
     def test_pg_missing_args_output(self):
         ret, _, stderr = self._capture_output(['pg'], stderr=True)
         self.assertEqual({}, ret)
-        self.assertRegexpMatches(stderr, re.compile('no valid command found.* closest matches'))
+        self.assertRegex(stderr, re.compile('no valid command found.* closest matches'))
 
     def test_pg_wrong_arg_output(self):
         ret, _, stderr = self._capture_output(['pg', 'map', 'bad-pgid'],
