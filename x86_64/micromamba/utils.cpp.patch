--- libmambapy/src/libmambapy/bindings/utils.cpp.orig	2025-05-29 13:26:59.915035009 +0000
+++ libmambapy/src/libmambapy/bindings/utils.cpp	2025-05-29 13:27:33.215447011 +0000
@@ -109,11 +109,11 @@
                         return std::nullopt;
                     }
                     const auto fg = style.get_foreground();
-                    if (fg.is_rgb)
+                    if (!fg.is_terminal_color())
                     {
-                        return { { fmt::rgb(fg.value.rgb_color) } };
+                        return { { fmt::rgb(fg.value()) } };
                     }
-                    return { { static_cast<fmt::terminal_color>(fg.value.term_color) } };
+                    return { { static_cast<fmt::terminal_color>(fg.value()) } };
                 }
             )
             .def_property_readonly(
@@ -125,16 +125,15 @@
                         return std::nullopt;
                     }
                     const auto bg = style.get_background();
-                    if (bg.is_rgb)
+                    if (!bg.is_terminal_color())
                     {
-                        return { { fmt::rgb(bg.value.rgb_color) } };
+                        return { { fmt::rgb(bg.value()) } };
                     }
-                    return { { static_cast<fmt::terminal_color>(bg.value.term_color) } };
+                    return { { static_cast<fmt::terminal_color>(bg.value()) } };
                 }
             )
             .def_property_readonly(
                 "emphasis",
-
                 [](const fmt::text_style& style) -> std::optional<fmt::emphasis>
                 {
                     if (!style.has_emphasis())
@@ -143,7 +142,6 @@
                     }
                     return { style.get_emphasis() };
                 }
-
             )
             .def("__copy__", &copy<fmt::text_style>)
             .def("__deepcopy__", &deepcopy<fmt::text_style>, py::arg("memo"));