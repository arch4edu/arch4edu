post_install() {
  echo -e "\e[1;33m==>\e[0m Read setup instructions at \e[1;36mhttps://wiki.archlinux.org/index.php/Pi-hole\e[0m"
  echo -e "\e[1;33m==>\e[0m Generating initial block list, please wait...\e[0m"

  # pre apply sys user creation and rights
  /usr/bin/systemd-sysusers > /dev/null 2>&1
  /usr/bin/chown -R pihole:pihole /etc/pihole

  sudo -u pihole bash /opt/pihole/mimic_setupVars.conf.sh;

  # update lists on first run
  echo -e "\e[1;33m==>\e[0m Creating initial adlists...\e[0m"
  sudo -u pihole bash /opt/pihole/gravity.sh --force > /dev/null 2>&1;
  # pihole -g > /dev/null

  # /etc/pihole/versions file generation
  echo -e "\e[1;33m==>\e[0m Creating 'versions' file...\e[0m"
  sudo -u pihole bash /opt/pihole/updatecheck.sh;
}

post_upgrade() {
  # clean old/unused/deprecated files
  [ -e /etc/pihole/.useIPv6 ] && rm /etc/pihole/.useIPv6
  [ -e /etc/pihole/adlists.list ] && rm /etc/pihole/adlists.list
  [ -e /etc/pihole/dns-servers.conf ] && rm /etc/pihole/dns-servers.conf

  # query logging disabling needs this
  grep -qF 'QUERY_LOGGING=' /etc/pihole/setupVars.conf || echo 'QUERY_LOGGING=true' >> /etc/pihole/setupVars.conf

  # /etc/pihole/versions file generation
  echo -e "\e[1;33m==>\e[0m Updating 'versions' file...\e[0m"
  sudo -u pihole bash /opt/pihole/updatecheck.sh;

  # keep pacman from throwing errors should none them be on the filesystem
  return 0
}

post_remove() {
  # delete all temp files except those modified the user
  # TODO - make this more intelligent to save *.pacsave.# where # is a number
  find /etc/pihole -type f ! -name '*.pacsave' ! -name 'pihole-FTL.conf' ! -name 'pihole-FTL.db' ! -name 'gravity.db' -delete
  id -u pihole > /dev/null 2>&1 && userdel -f pihole
}
