# Maintainer: Norbert Weber <norbert.weber_at_hzdr.de>
# Contributor: Xwang <xwaang1976@gmail.com>
# Contributor: George Eleftheriou <eleftg>
# Contributor: Andrew Fischer <andrew_at_apastron.co>
# Contributor: <gucong43216@gmail.com>

# consider this?
#   pkgname=openfoam-com ?
#   conflicts=("openfoam")

pkgname=openfoam-esi
pkgver=v2006
_distname=OpenFOAM
_dist=$_distname-$pkgver
pkgrel=3
pkgdesc="The open source CFD toolbox (www.openfoam.com)"
arch=('i686' 'x86_64')
url="http://www.openfoam.com/"
license=('GPL')
install="${pkgname}.install"
depends=('gcc' 'cgal' 'fftw' 'boost' 'openmpi' 'paraview' 'utf8cpp' 'scotch' 'parmetis')

source=("https://sourceforge.net/projects/openfoam/files/v2006/OpenFOAM-v2006.tgz")

md5sums=('1226d48e74a4c78f12396cb586c331d8')

prepare() {
  if [ -n "$WM_PROJECT_DIR" ]
  then
    echo
    echo -e "\e[1m\e[5m\e[31mPlease make sure that no OpenFOAM version is sourced in bashrc.\e[0m"
    echo
    return 1
  fi

  # Extract the current version and major of paraview for use in the system preferences
  _pversion=$(pacman -Q $(pacman -Qqo $(which paraview)) | sed -e 's/.* //; s/-.*//g')
  _pmajor="${_pversion%%.*}"

  projectDir="${srcdir}/${_distname}-${pkgver}"

  # Generate and install the system preferences file
  echo "# Preferences for arch-linux

export WM_COMPILER_TYPE=system
export WM_MPLIB=SYSTEMOPENMPI

export ParaView_VERSION=${_pversion}
export ParaView_MAJOR=${_pmajor}
# End" \
  > "${projectDir}"/etc/prefs.sh


  # Configure components.
  # Use system values for boost/cgal, fftw, scotch
  # could also manage paraview here?

  "${projectDir}"/bin/tools/foamConfigurePaths \
    -boost boost-system \
    -cgal  cgal-system \
    -fftw  fftw-system \
    -kahip kahip-none \
    -scotch scotch-system \
    ;
}


build() {
  if [ -n "$WM_PROJECT_DIR" ]
  then
    echo
    echo -e "\e[1m\e[5m\e[31mPlease make sure that no OpenFOAM version is sourced in bashrc.\e[0m"
    echo
    return 1
  fi

  projectDir="${srcdir}/${_dist}"
  [ -f "$projectDir/etc/bashrc" ] || {
      echo "No $projectDir/etc/bashrc found"
      return 1
  }

  # Avoid external influence on the environment
  export FOAM_CONFIG_MODE="o"
  unset FOAM_SETTINGS


  set +e  # Turn errexit off
  source "$projectDir"/etc/bashrc '' || \
    echo "Ignore spurious sourcing error"
  set -e  # Turn errexit back on

  cd "$projectDir" || exit

  ./Allwmake -j -log=log.build

  # Check log for this type of content:
  #
  #   api   = 2006
  #   patch = 1
  #   bin   = 283 entries
  #   lib   = 139 entries

  [ -f log.build ] || {
      echo "No log.build file - build failed entirely"
      exit 1
  }

  bins="$( cat log.build | sed -ne 's/.*bin *= *\([0-9][0-9]*\).*/\1/p;' | sed -ne '$p' )"
  libs="$( cat log.build | sed -ne 's/.*lib *= *\([0-9][0-9]*\).*/\1/p;' | sed -ne '$p' )"

  if [ "${bins:=0}" = 0 ] || [ "${libs:=0}" = 0 ]
  then
      echo
      echo "Build failed with $bins executables and $libs libraries"
      echo "Check the log.build file"
      echo
      exit 1
  fi

  # Remove intermediate build artifacts
  rm -rf "${projectDir}/build"
}


package() {
  cd ${srcdir}

  # Create destination directories
  install -d ${pkgdir}/opt/${_distname} ${pkgdir}/etc/profile.d || return 1

  # copy package to pkgdir
  cp -r "${srcdir}/${_dist}" "${pkgdir}/opt/${_distname}" || return 1

  # Permission fixes - for system-wide install and use
  chmod -R go+r ${pkgdir}/opt
  chmod -R 755 ${pkgdir}/opt/${_distname}/${_dist}/bin
  chmod -R 755 ${pkgdir}/opt/${_distname}/${_dist}/etc

  # create alias in .bashrc
  echo "alias of=\"source /opt/${_distname}/${_dist}/etc/bashrc\"" >> ~/.bashrc
  echo "alias paraFoam=\"paraFoam -builtin\"" >> ~/.bashrc
}

# ---------------------------------------------------------------------------
